spring.application.name=log2doc

# ========================================
# Database Configuration (MariaDB - Docker)
# ========================================
# Docker 컨테이너에서 실행되는 MariaDB 연결 설정
spring.datasource.url=jdbc:mariadb://localhost:3306/log2doc
spring.datasource.username=admin
# 실제 MariaDB 컨테이너에서 설정한 비밀번호로 변경 필요
spring.datasource.password=admin
#spring.datasource.password=1234
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# 연결 풀 설정 (Docker 환경에서 안정적인 연결을 위해)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.max-lifetime=1800000

# ========================================
# JPA/Hibernate Configuration
# ========================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# JPA Auditing 활성화
spring.jpa.auditing.enable=true

# ========================================
# Redis Configuration
# ========================================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=1234
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# ========================================
# JWT Configuration
# ========================================
# JWT 설정을 app.jwt 네임스페이스로 통합
app.jwt.secret=mySecretKey1234567890123456789012345678901234567890
app.jwt.expiration=86400000
app.jwt.refresh.expiration=604800000

# ========================================
# Server Configuration
# ========================================
server.port=8080
server.servlet.context-path=/

# ========================================
# Logging Configuration
# ========================================
logging.level.com.rookies.log2doc=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ========================================
# Security Configuration
# ========================================
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN

# ========================================
# Application Configuration
# ========================================
app.name=User Management System
app.version=1.0.0

# ========================================
# Validation Configuration
# ========================================
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# ========================================
# Actuator Configuration
# ========================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# ========================================
# File Storage Configuration
# ========================================

# 개발/테스트 환경 (로컬 저장)
file.upload.path.local=./uploads
file.upload.path.local.absolute=C:/uploads  # Windows 절대 경로

# 운영 환경 (NFS 저장) - flask 연동시 주석 해제
# file.upload.path.nfs=/mnt/nfs/uploads
# file.upload.enabled.nfs=true

# 현재 활성화된 저장 방식 - flask 연동시 true, false 바꿔줘야 함
file.upload.enabled.local=true
file.upload.enabled.nfs=false

# 최대 파일 크기
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB